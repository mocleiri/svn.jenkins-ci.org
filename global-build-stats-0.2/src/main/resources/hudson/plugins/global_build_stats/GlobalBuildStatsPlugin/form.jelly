<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form" xmlns:i="jelly:fmt">
    <form name="createBuildStat_${buildStatId}" action="${formAction}" method="post" class="globalBuildStatsForm"
    	  id="createBuildStat_${buildStatId}" onsubmit="return !isDivErrorPresentInForm(this);">
      Title : <input type="text" name="title" 
      				 value="${currentBuildStatConfig.buildStatTitle}" 
      				 checkUrl="'${rootURL}/plugin/global-build-stats/checkTitle?value='+escape(field.value)"
      				 onblur="validateField(this);" onchange="validateField(this);"
      		  /><span class="validation-error-area" style="display:inline-block;"></span><br/>
      Chart Width * Height :
      <input type="text" name="buildStatWidth" 
      		 size="3" value="${currentBuildStatConfig.buildStatWidth}" 
      		 checkUrl="'${rootURL}/plugin/global-build-stats/checkBuildStatWidth?value='+escape(field.value)"
      		 onblur="validateField(this);" onchange="validateField(this);"
      		 validationErrorAreaClassName="width-validation-error-area"
      /> 
      <span class="width-validation-error-area" style="display:inline-block;"></span>
      * 
      <input type="text" name="buildStatHeight" 
      		 size="3" value="${currentBuildStatConfig.buildStatHeight}" 
      		 checkUrl="'${rootURL}/plugin/global-build-stats/checkBuildStatHeight?value='+escape(field.value)"
      		 onblur="validateField(this);" onchange="validateField(this);"
      		 validationErrorAreaClassName="height-validation-error-area"
      />
      <span class="height-validation-error-area" style="display:inline-block;"></span><br/>
      Chart scale : 
      <select id="${buildStatId}_historicScale" 
      		  name="historicScale" checkUrl="'${rootURL}/plugin/global-build-stats/checkHistoricScale?value='+escape(field.value)"
      		  onchange="validateField(this); changeChartLengthUnit('${buildStatId}', this.value);">
      	<j:forEach var="historicScale" items="${it.historicScales}" varStatus="status">
	        <option value="${historicScale}">${historicScale}</option>
      	</j:forEach>
      </select><span class="validation-error-area" style="display:inline-block;"></span><br/>
      Chart length :
	  <input type="text" name="historicLength" 
	  		 size="3" value="${currentBuildStatConfig.historicLength}" 
      		 checkUrl="'${rootURL}/plugin/global-build-stats/checkHistoricLength?value='+escape(field.value)"
      		 onblur="validateField(this);" onchange="validateField(this);"
	  />
      <j:forEach var="historicScale" items="${it.historicScales}" varStatus="status">
        <span id="${buildStatId}_${historicScale}" style="display:none">${historicScale.label}</span>
      </j:forEach>
      <span class="validation-error-area" style="display:inline-block;"></span><br/>
      <j:choose>
      	<j:when test="${currentBuildStatConfig.historicScale != null}">
		  <script type="text/javascript"><![CDATA[
		  selectionOption(document.getElementById('${buildStatId}_historicScale'), '${currentBuildStatConfig.historicScale}');
		  ]]></script>
      	</j:when>
      	<j:otherwise>
		  <script type="text/javascript"><![CDATA[
	  	  selectionOption(document.getElementById('${buildStatId}_historicScale'), '${it.historicScales[0]}');
		  ]]></script>
      	</j:otherwise>
      </j:choose>
      Job filtering : <input type="radio" id="${buildStatId}_jobFilteringType_ALL" checked="checked" name="jobFilteringType" value="ALL" onchange="jobFilterTypeSelected('${buildStatId}', this.value);" />ALL Jobs
      <input type="radio" id="${buildStatId}_jobFilteringType_REGEX" name="jobFilteringType" value="jobNameRegex" onchange="jobFilterTypeSelected('${buildStatId}', this.value);" />
      Job name regex :
      <input type="text" id="${buildStatId}_jobNameRegex" 
      		 disabled="true" name="jobNameRegex" size="10" 
      		 onblur="document.getElementById('${buildStatId}_jobFilter').value='jobNameRegex('+this.value+')';" 
      />
      <j:invokeStatic var="escapedJobFilter" className="hudson.plugins.global_build_stats.GlobalBuildStatsPlugin" method="escapeAntiSlashes">
      	<j:arg type="java.lang.String" value="${currentBuildStatConfig.jobFilter}" />
      </j:invokeStatic>
      <input id="${buildStatId}_jobFilter" type="hidden" name="jobFilter" value="${escapedJobFilter}" /><br/>
	  <script type="text/javascript"><![CDATA[
	  if(document.getElementById('${buildStatId}_jobFilter').value.indexOf('jobNameRegex') != -1){
	  	  document.getElementById('${buildStatId}_jobFilteringType_REGEX').checked = 'checked';
	  	  initializeRegexField('${buildStatId}', '${escapedJobFilter}');
	  	  document.getElementById('${buildStatId}_jobFilteringType_REGEX').onchange();
	  	  document.getElementById('${buildStatId}_jobNameRegex').disabled = false;
	  } else if(document.getElementById('${buildStatId}_jobFilter').value.indexOf('ALL') != -1){
	  	  document.getElementById('${buildStatId}_jobFilteringType_ALL').checked = 'checked';
	  	  document.getElementById('${buildStatId}_jobFilteringType_ALL').change();
	  }
	  ]]></script>
      Statuses shown :
      <j:choose>
      	<j:when test="${currentBuildStatConfig != '' and ! currentBuildStatConfig.successShown}">
	      <input type="checkbox" value="true" name="successShown" />Success
      	</j:when>
      	<j:otherwise>
	      <input type="checkbox" value="true" name="successShown" checked="checked" />Success
      	</j:otherwise>
      </j:choose>
      <j:choose>
      	<j:when test="${currentBuildStatConfig != '' and ! currentBuildStatConfig.failuresShown}">
	      <input type="checkbox" value="true" name="failuresShown" />Failures
      	</j:when>
      	<j:otherwise>
    	  <input type="checkbox" value="true" name="failuresShown" checked="checked" />Failures
      	</j:otherwise>
      </j:choose>
      <j:choose>
      	<j:when test="${currentBuildStatConfig != '' and ! currentBuildStatConfig.unstablesShown}">
	      <input type="checkbox" value="true" name="unstablesShown" />Unstables
      	</j:when>
      	<j:otherwise>
    	  <input type="checkbox" value="true" name="unstablesShown" checked="checked" />Unstables
      	</j:otherwise>
      </j:choose>
      <j:choose>
      	<j:when test="${currentBuildStatConfig != '' and ! currentBuildStatConfig.abortedShown}">
    	  <input type="checkbox" value="true" name="abortedShown" />Aborted
      	</j:when>
      	<j:otherwise>
	      <input type="checkbox" value="true" name="abortedShown" checked="checked" />Aborted
      	</j:otherwise>
      </j:choose>
      <j:choose>
      	<j:when test="${currentBuildStatConfig != '' and currentBuildStatConfig.notBuildShown}">
	      <input type="checkbox" value="true" name="notBuildsShown" checked="checked" />Not Build<br/>
      	</j:when>
      	<j:otherwise>
    	  <input type="checkbox" value="true" name="notBuildsShown" />Not Build<br/>
      	</j:otherwise>
      </j:choose>
      <input type="hidden" name="buildStatId" value="${buildStatId}" />
      <input type="submit" class="submit-button" value="${formSubmitLabel}" name="Submit" />
    </form>
</j:jelly>