<!--
  Config page
-->
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form">
  <f:entry title="Disable Build" help="/help/project-config/disable.html">
    <f:checkbox name="disable" checked="${it.disabled}" />
    (No new builds will be executed until the project is re-enabled.)
  </f:entry>


  <j:set var="jdks" value="${it.parent.JDKs}" />
  <j:if test="${!empty(jdks)}">
    <f:entry title="JDK"
             description="JDK to be used for this project">
      <select class="setting-input" name="jdk">
        <option>(Default)</option>
        <j:forEach var="inst" items="${jdks}">
        	<f:option selected="${inst.name==it.JDK.name}">${inst.name}</f:option>
        </j:forEach>
      </select>
    </f:entry>
  </j:if>

  <!-- master/slave -->
  <j:set var="slaves" value="${it.parent.slaves}" />
  <j:if test="${!empty(slaves)}">
    <f:optionalBlock name="hasSlaveAffinity" title="Tie this project to a node" checked="${it.assignedNode!=null}"
        help="/help/project-config/slave.html">
      <f:entry title="Node">
        <select class="setting-input" name="slave">
          <option>(This machine)</option>
          <j:forEach var="s" items="${slaves}">
            <f:option selected="${s==it.assignedNode}" value="${s.nodeName}"
              >${s.nodeName} <j:if test="${!empty(s.nodeDescription)}">(${s.nodeDescription})</j:if></f:option>
          </j:forEach>
        </select>
      </f:entry>
    </f:optionalBlock>
  </j:if>

  <f:section title="Advanced Project Options">
    <f:advanced>
      <!-- custom quiet period -->
      <f:optionalBlock name="hasCustomQuietPeriod" title="Quiet period" checked="${it.hasCustomQuietPeriod}"
          help="/help/project-config/quietPeriod.html">
        <f:entry title="Quiet period"
          description="Number of seconds">
          <input class="setting-input" name="quiet_period"
            type="text" value="${it.quietPeriod}"/>
        </f:entry>
      </f:optionalBlock>
    </f:advanced>
  </f:section>


  <!-- SCM config pane -->
  <f:section title="Source Code Management">
    <j:getStatic var="scms" className="hudson.scm.SCMS" field="SCMS" />
    <j:forEach var="idx" begin="0" end="${size(scms)-1}">
      <j:set var="scmd" value="${scms[idx]}" />
      <f:radioBlock name="scm" value="${idx}" title="${scmd.displayName}" checked="${it.scm.descriptor==scmd}">
        <j:choose>
          <j:when test="${it.scm.descriptor==scmd}">
            <j:set var="scm" value="${it.scm}"/>
          </j:when>
          <j:otherwise>
            <j:set var="scm" value="${null}"/>
          </j:otherwise>
        </j:choose>
        <st:include from="${scmd}" page="${scmd.configPage}"/>
      </f:radioBlock>
    </j:forEach>
  </f:section>


  <!-- build triggers config pane -->
  <j:getStatic var="triggers" className="hudson.triggers.Triggers" field="TRIGGERS" />
  <f:descriptorList title="Build Triggers"
                    descriptors="${triggers}"
                    instances="${it.triggers}"
                    varName="trigger">
    <!-- pseudo-trigger to list upstream projects. -->
    <j:set var="up" value="${it.upstreamProjects}" />
    <f:optionalBlock name="pseudoUpstreamTrigger"
                     help="/help/project-config/upstream.html"
                     title="Build after other projects are built"
                     checked="${!empty(up)}">
      <f:entry title="Projects names"
               description="Multiple projects can be specified like 'abc, def'">
        <input class="setting-input" name="upstreamProjects"
          type="text" value="${h.getProjectListString(up)}"/>
      </f:entry>
    </f:optionalBlock>
  </f:descriptorList>


  <!-- build config pane -->
  <j:getStatic var="builders" className="hudson.tasks.BuildStep" field="BUILDERS" />
  <f:descriptorList title="Build"
                    descriptors="${builders}"
                    instances="${it.builders}"
                    varName="builder" />


  <!-- publisher config pane -->
  <j:getStatic var="publishers" className="hudson.tasks.BuildStep" field="PUBLISHERS" />
  <f:descriptorList title="Post-build Actions"
                    descriptors="${publishers}"
                    instances="${it.publishers}"
                    varName="publisher" />
</j:jelly>