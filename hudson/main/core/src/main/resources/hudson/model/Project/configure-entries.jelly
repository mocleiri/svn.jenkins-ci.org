<!--
  Config page
-->
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form">
  <st:include page="configure-common.jelly" />


  <!-- build triggers config pane -->
  <f:triggerDescriptorList>
    <!-- pseudo-trigger to list upstream projects. -->
    <j:set var="up" value="${it.upstreamProjects}" />
    <f:optionalBlock name="pseudoUpstreamTrigger"
                     help="/help/project-config/upstream.html"
                     title="Build after other projects are built"
                     checked="${!empty(up)}">
      <f:entry title="Projects names"
               description="Multiple projects can be specified like 'abc, def'">
        <input class="setting-input validated" name="upstreamProjects"
          checkUrl="'${rootURL}/publisher/BuildTrigger/check?value='+escape(this.value)"
          type="text" value="${h.getProjectListString(up)}"/>
      </f:entry>
    </f:optionalBlock>
    <!-- pseudo-trigger to configure URL to trigger builds remotely. -->
    <st:include page="/hudson/model/BuildAuthorizationToken/config.jelly" />
  </f:triggerDescriptorList>


  <!-- build wrapper config pane -->
  <j:getStatic var="wrappers" className="hudson.tasks.BuildWrappers" field="WRAPPERS" />
  <j:if test="${!empty(wrappers)}">
    <f:descriptorList title="Build Environment"
                      descriptors="${wrappers}"
                      instances="${it.buildWrappers}"
                      varName="wrapper" />
  </j:if>


  <!-- build config pane -->
  <j:getStatic var="builders" className="hudson.tasks.BuildStep" field="BUILDERS" />
  <f:descriptorList title="Build"
                    descriptors="${builders}"
                    instances="${it.builders}"
                    varName="builder" />


  <!-- publisher config pane -->
  <j:getStatic var="publishers" className="hudson.tasks.BuildStep" field="PUBLISHERS" />
  <f:descriptorList title="Post-build Actions"
                    descriptors="${publishers}"
                    instances="${it.publishers}"
                    varName="publisher" />
</j:jelly>