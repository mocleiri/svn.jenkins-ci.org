<!--

-->
<j:jelly xmlns:j="jelly:core" xmlns:d="jelly:define" xmlns:st="jelly:stapler">
  <st:documentation>
    Glorified &lt;input type="password">

    <st:attribute name="field">
      Used for databinding. TBD.
    </st:attribute>
    <st:attribute name="name">
      This becomes @name of the &lt;input> tag.
      If @field is specified, this value is inferred from it.
    </st:attribute>
    <st:attribute name="value">
      The initial value of the field. This becomes the @value of the &lt;input> tag.
      If @field is specified, the current property from the "instance" object
      will be set as the initial value automatically,
      which is the recommended approach.
    </st:attribute>
    <st:attribute name="checkUrl">
      If specified, the value entered in this input field will be checked (via AJAX)
      against this URL, and errors will be rendered under the text field.

      If @field is specified, this will be inferred automatically,
      which is the recommended approach.
    </st:attribute>
  </st:documentation>
  <j:set var="checkUrl" value="${h.getCheckUrl(attrs.checkUrl,descriptor,attrs.field)}" />
  <input class="setting-input ${h.ifThenElse(checkUrl!=null,'validated','')}"
         name ="${h.defaulted(attrs.name,'_.'+attrs.field)}"
         value="${h.defaulted(attrs.value,instance[attrs.field])}"
         id="${attrs.id}"
         type="password"
         checkUrl="${checkUrl}" checkMethod="${attrs.checkMethod}"
         onchange="${attrs.onchange}" onkeyup="${attrs.onkeyup}"/>
</j:jelly>