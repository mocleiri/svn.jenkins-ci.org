<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form" xmlns:i="jelly:fmt">

<j:set var="url" value="${request.requestURL}" />
<j:if test="${it.getPlugin().getStrategyForURL(url.toString()) != null}">
	<j:set var="scmStrategy" value="${it.getPlugin().getStrategyForURL(url.toString())}" />
	<j:set var="pageMatcher" value="${scmStrategy.getPageMatcherMatching(url.toString())}" />
	<script type="text/javascript">
	YAHOO.namespace("scmSyncConfiguration");
	YAHOO.scmSyncConfiguration.targetFormName = '${pageMatcher.targetFormName}';
	YAHOO.scmSyncConfiguration.commentPopupValidated = false;
	</script>
	<script type="text/javascript"><![CDATA[
	// Hudson hack allowing to override the form.onsubmit generated by hudson-behaviour with
	// a divError check
	new Event.observe(window, 'load', decorateOnsubmitForm);
    function retrieveTargetFormOnPage(){
		var formElts = $$("form");
		for(var i=0; i<formElts.length; i++){
			var form = formElts[i];
			if(form.getAttribute("name") == YAHOO.scmSyncConfiguration.targetFormName){
                return form;
            }
        }
        return null;
    }
	function decorateOnsubmitForm(){
		var form = retrieveTargetFormOnPage();
        form.observe("submit", function(evt){
            var dontStopEvent = YAHOO.scmSyncConfiguration.commentPopupValidated || enterCommitComment();
            if(!dontStopEvent){
                Event.stop(evt);
            }
        });
        /*
        var mySubmit = function(){
            var stopEvent YAHOO.scmSyncConfiguration.commentPopupValidated || enterCommitComment(this);
            if(stopEven){
                
            }
            return stopEvent;
        }
    
        var oldOnSubmit = form.onsubmit;
        if(typeof oldOnSubmit == "function"){
            form.onsubmit = function(){ oldOnSubmit.call(this); mySubmit.call(this); }
        } else {
            form.onsubmit = mySubmit;
        }
        form = null; // memory leak prevention
        */
	}
	
	function ajaxCall(callType, param, successCallback){
		ajaxCall(callType, param, successCallback, false);
	}
	function ajaxCall(callType, param, successCallback, skipLoading){
		
		if(!skipLoading){
			YAHOO.namespace("scm.sync.configuration.wait");
			YAHOO.scm.sync.configuration.wait.modalPopup =  
		        new YAHOO.widget.Panel("wait",   
		            { width:"240px",
		              fixedcenter:true,  
		              close:false,  
		              draggable:false,  
		              zindex:4, 
		              modal:true
		            }
		        ); 
		        
			YAHOO.scm.sync.configuration.wait.modalPopup.setHeader("--- Waiting ---");
			YAHOO.scm.sync.configuration.wait.modalPopup.setBody("--- Waiting ---"); 
			YAHOO.scm.sync.configuration.wait.modalPopup.render(document.body);
		}
				
		var ajaxCallParams = {
			onSuccess: function(ret) {
				successCallback.call(null, ret);
				if(!skipLoading){
					YAHOO.scm.sync.configuration.wait.modalPopup.hide();
				}
			},/* For unknown reasons, an exception is thrown after the onSuccess process .. :(
			onException: function(transport, ex) { 
				alert('exception : '+ex);
				if(!skipLoading){
					YAHOO.scm.sync.configuration.wait.modalPopup.hide();
				}
			    throw ex;
			},*/
			onFailure: function(transport) { 
				alert('failure : '+Object.toJSON(transport));
				if(!skipLoading){
					YAHOO.scm.sync.configuration.wait.modalPopup.hide();
				}
			}
		};
		
		if(callType == 'form'){
			$(param).request(ajaxCallParams);
		} else {
			new Ajax.Request(param, ajaxCallParams);
		}
	}	
	
	function enterCommitComment(form){
		YAHOO.namespace("scm.sync.configuration");
		YAHOO.scm.sync.configuration._buttons = [];
	    YAHOO.scm.sync.configuration.handleSubmit = function() {
	    	ajaxCall('form', 'commentForm', function(ret){
				YAHOO.scmSyncConfiguration.commentPopupValidated = true;
		        YAHOO.scm.sync.configuration.modalPopup.hide();
	    		retrieveTargetFormOnPage().submit();
	    	}, true);
	    }
	    YAHOO.scm.sync.configuration.handleCancel = function() {
		    YAHOO.scm.sync.configuration.modalPopup.hide(); 
	    }
	    
		YAHOO.scm.sync.configuration.modalPopup =  
	        new YAHOO.widget.Panel("buildStatConfigForm",   
	            { width:"720px",
	              fixedcenter:true,  
	              close:false,  
	              draggable:false,  
	              zindex:4, 
	              modal:true
	            }
	        ); 
	        
		content = "<form id='commentForm' method='post' action='"+rootURL+"/plugin/scm-sync-configuration/submitComment'>Comment :<br/><textarea id='comment' name='comment' cols='80' rows='3'></textarea></form>";
		YAHOO.scm.sync.configuration.modalPopup.setHeader("Commit comment");
		YAHOO.scm.sync.configuration.modalPopup.setBody(content); 
	    YAHOO.scm.sync.configuration.modalPopup.setFooter('<span id="panelFooter" class="button-group"></span>'); 
	    YAHOO.scm.sync.configuration.modalPopup.showEvent.subscribe(function() { 
	        if (this._buttons.length == 0) {
	            this._buttons[0] = new YAHOO.widget.Button({ 
	                type: 'button', 
	                label: "Submit comment", 
	                container: 'panelFooter' 
	            }); 
	            this._buttons[0].on('click', YAHOO.scm.sync.configuration.handleSubmit); 
	            this._buttons[1] = new YAHOO.widget.Button({ 
	                type: 'button', 
	                label: "Cancel", 
	                container: 'panelFooter' 
	            }); 
	            this._buttons[1].on('click', YAHOO.scm.sync.configuration.handleCancel); 
	        }
	    }, YAHOO.scm.sync.configuration, true); 
		YAHOO.scm.sync.configuration.modalPopup.render(document.body);
		
		return false;
	}
	]]></script>
</j:if>

</j:jelly>