The manifest-debug.mf file follows MANIFEST.MF format, and is used during the debugging.

The 'Plugin-Class' attribute specifies the fully qualified name of the class
that extends Plugin,
and this is how Hudson bootstraps a plugin

The 'Class-Path' attribute specifies classpath relative to the directory
where this file exists.
Jelly views need to be in the classpath, hence './views' is in here.
Unlike jar's META-INF/MANIFEST.MF, this "Class-Path" supports wildcard,
so for example if you have jar files that your plugin depends on,
then you can also have "lib/*.jar", etc.
Class-Path: ./build/classes ./views

The 'Long-Name' attribute specifies a human readable name of this plugin.

The 'Resource-Path' specifies static resources, again relative to the
directory where this file exists.

