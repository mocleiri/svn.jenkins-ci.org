<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form">
  <st:documentation>
    Generate config pages from a list of Descriptors into a section.

    <st:attribute name="title">
      Human readable title of the section to be rendered in HTML.
    </st:attribute>
    <st:attribute name="descriptors" use="required">
      hudson.model.Descriptor collection whose configuration page is rendered.
    </st:attribute>
    <st:attribute name="instances" use="required">
      Map&lt;Descriptor,Describable> that defines current instances of those descriptors.
      These are used to fill initial values. Other classes that define the get(Descriptor)
      method works fine, too.
    </st:attribute>
    <st:attribute name="targetType">
      the type for which descriptors will be configured.
      default to ${it.class}
    </st:attribute>
  </st:documentation>

  <j:set var="targetType" value="${h.defaulted(attrs.targetType,it.class)}"/>
  <f:section title="${attrs.title}">
    <d:invokeBody />
	  <j:forEach var="d" items="${descriptors}">
      <f:optionalBlock name="${d.jsonSafeClassName}" help="${d.helpFile}"
	      title="${d.displayName}" checked="${instances.get(d)!=null}">

	      <j:set var="descriptor" value="${d}" />
	      <j:set var="instance" value="${instances.get(d)}" />
	      <st:include from="${d}" page="${d.configPage}" optional="true" />
	    </f:optionalBlock>
	  </j:forEach>
	</f:section>
</j:jelly>